name: Rust

on:
  push:
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "6,26,46 * * * *"
  workflow_dispatch:
    inputs:
      c_digits:
        description: "Length of composites to process, in decimal digits"
        required: false
        type: number
      u_digits:
        description: "Length of unknown-status numbers to process, in decimal digits"
        required: false
        type: number
      prp_start:
        description: "Number of probable primes to skip before the first one to process"
        required: false
        type: number
env:
  CARGO_TERM_COLOR: always
  C_DIGITS: ${{ inputs.c_digits }}
  U_DIGITS: ${{ inputs.u_digits }}
  PRP_START: ${{ inputs.prp_start }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cargo
        key: cargo-${{ hashFiles('.github/workflows/rust.yml', '**/Cargo.toml') }}
        restore-keys: |
          cargo-
    - name: Cache build
      uses: actions/cache@v4
      with:
        path: |
          target
          Cargo.lock
        key: target-${{ hashFiles('.github/workflows/rust.yml', '**/*.rs') }}
        restore-keys: |
          target-
    - name: Let tar run as root
      run: sudo chown root /bin/tar && sudo chmod u+s /bin/tar
    - name: Cache apt/dpkg
      uses: actions/cache@v4
      with:
        path: |
          /usr/bin/ecm
          /usr/lib/x86_64-linux-gnu/libecm.a
          /var/cache/apt/archives/*.deb
          /var/lib/dpkg/status
        key: dpkg-ecm-2025-10-13
    - run: rustup install nightly
    - name: Build
      run: |
        (
          mkfifo composites
          sudo apt-get install libecm-dev gmp-ecm
        ) &
        apt_pid=$!
        ./build.sh
        wait ${apt_pid}
    - name: Run
      run: |
        set -x
        if [ "${{github.event_name}}" == "push" ]; then
          export RUST_BACKTRACE=full
        fi
        RUSTFLAGS="-C target-cpu=native" NO_RESERVE=1 RUN=${{github.run_number}} timeout 355m nice -+19 cargo +nightly run --release &
        rust_pid=$!
        sleep 21300 &
        yafu_timer_pid=$!
        ./yafu.sh <composites &
        yafu_pid=$!
        wait "${rust_pid}" || true
        echo "Rust program exited"
        wait -n "${yafu_pid}" "${yafu_timer_pid}" || true
        echo "yafu time is up"
        # Prevent any more yafu processes from starting
        rm ./yafu || true
        rm composites || true
        yafus=$(ps -C yafu -o pid= || true)
        if [ "${yafus}" != "" ]; then
          echo "Canceling ${#yafus} unfinished yafu processes"
          xargs kill <<< "${yafus}"
          sleep 60
        else
          echo "No unfinished yafu processes found"
        fi
    - name: Upload any failed submissions
      uses: actions/upload-artifact@v5
      with:
        name: Failed submissions
        path: 'failed-*.csv'
        if-no-files-found: ignore
